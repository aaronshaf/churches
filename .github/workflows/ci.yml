name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-type-check:
    name: Lint, Format & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build CSS
        run: pnpm run build:css
        
      - name: Run Biome check (lint + format)
        run: pnpm run check
        
      - name: Type check
        run: pnpm exec tsc --noEmit
        
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Create placeholder .dev.vars
        run: |
          cat > .dev.vars << EOF
          TURSO_DATABASE_URL=placeholder
          TURSO_AUTH_TOKEN=placeholder
          GOOGLE_MAPS_API_KEY=placeholder
          CLOUDFLARE_ACCOUNT_ID=placeholder
          CLOUDFLARE_ACCOUNT_HASH=placeholder
          CLOUDFLARE_IMAGES_API_TOKEN=placeholder
          OPENROUTER_API_KEY=placeholder
          BETTER_AUTH_SECRET=placeholder-secret-at-least-32-chars
          BETTER_AUTH_URL=http://localhost:8787
          GOOGLE_CLIENT_ID=placeholder
          GOOGLE_CLIENT_SECRET=placeholder
          EOF
          
      - name: Build application
        run: pnpm run build
        
      - name: Check build output
        run: |
          if [ ! -f "public/css/styles.css" ]; then
            echo "CSS build failed - styles.css not found"
            exit 1
          fi
          echo "Build completed successfully"

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run security audit
        run: pnpm audit --production
        continue-on-error: true
        
      - name: Check for secrets in code
        run: |
          # Check for potential secrets (API keys, tokens, etc.)
          if grep -r --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" \
             -E "(api[_-]?key|api[_-]?secret|access[_-]?token|auth[_-]?token|private[_-]?key)" \
             src/ | grep -v -E "(process\.env|import\.meta\.env|c\.env|env\.|// |/\*|\* )"; then
            echo "⚠️  Warning: Potential hardcoded secrets found. Please review the matches above."
            echo "Make sure all secrets are stored in environment variables."
          else
            echo "✅ No hardcoded secrets detected"
          fi